#
#   All Osparc Ops/simcore parameters are configured here.
# - Keep it alphabetical order as much as possible and grouped by prefix
# - To expose:  export $(grep -v '^#' .env | xargs -0)
#

# This will set the user/password credentials on all Ops services
SERVICES_USER=admin
SERVICES_PASSWORD=testertester


# Set the desired local domain name here. MACHINE_FQDN need to be ALWAYS filled, even when MACHINE_FQDNS is filled.
MACHINE_FQDN=osparc.local
OSPARC_DEPLOYMENT_TARGET=local
API_DOMAIN=api.${MACHINE_FQDN}
STORAGE_DOMAIN=storage.${MACHINE_FQDN}
MONITORING_DOMAIN=monitoring.${MACHINE_FQDN}

# Cluster name (Can only be master, dalco, public or aws)
CLUSTER_NAME=master

# Authorized ips (ips from the team) in case of maintenance
MAINTENANCE_TEAM_IPS=


# Simcore deployment -------------------------------------------------------
# define the stack prefix name
# 1. stack name = PREFIX_STACK_NAME-SIMCORE_STACK_NAME
# 2. inside stack services are named as in webserver -> PREFIX_STACK_NAME_webserver
#
#
#
PREFIX_STACK_NAME=${CLUSTER_NAME}
SIMCORE_STACK_NAME=${CLUSTER_NAME}-simcore

# S3
S3_ACCESS_KEY=testertester
S3_BUCKET=${PREFIX_STACK_NAME}-simcore
S3_BUCKET_NAME=${S3_BUCKET}
S3_ENDPOINT=${STORAGE_DOMAIN}
S3_SECRET_KEY=testertester
S3_SECURE=1


#ADMIN PANEL
ADMINPANELS_DOMAIN=admin.${MACHINE_FQDN}
ADMINPANELS_PASSWORD=${SERVICES_PASSWORD}


#SIMCORE NODE AGENT
AGENT_VOLUMES_CLEANUP_S3_SECURE=${S3_SECURE}
AGENT_VOLUMES_CLEANUP_S3_ENDPOINT=${S3_ENDPOINT}
AGENT_VOLUMES_CLEANUP_S3_ACCESS_KEY=${S3_ACCESS_KEY}
AGENT_VOLUMES_CLEANUP_S3_SECRET_KEY=${S3_SECRET_KEY}
AGENT_VOLUMES_CLEANUP_S3_BUCKET=osparc-simcore-zombie-dy-volume-saves
AGENT_VOLUMES_CLEANUP_S3_PROVIDER=MINIO
AGENT_VOLUMES_CLEANUP_S3_REGION=us-east-1

#BATMAN PANEL
BATMANPANELS_DOMAIN=batman.${MACHINE_FQDN}
BATMANPANELS_PERSONAL_ACCESS_TOKEN=
BATMANPANELS_PER_PAGE=100
BATMANPANELS_SINCE_RELATIVE=
BATMANPANELS_BRANCHES=
BATMANPANELS_CONFIG_FILEPATH='/batmanpanels'
BATMANPANELS_J2TEMPLATEFILENAME='static.j2'

# Datcore
BF_API_KEY=none
BF_API_SECRET=none

# DNS Challenge - Domain provider config for AWS
AWS_ACCESS_KEY_ID=
AWS_SECRET_ACCESS_KEY=
AWS_HOSTED_ZONE_ID=


# CATALOG
CATALOG_DEV_FEATURES_ENABLED=1
CATALOG_HOST=${PREFIX_STACK_NAME}_catalog
CATALOG_SERVICES_DEFAULT_RESOURCE='{"CPU": {"limit": 0.1, "reservation": 0.1}, "RAM": {"limit": 2147483648, "reservation": 2147483648}}'
CATALOG_SERVICES_DEFAULT_SPECIFICATIONS='{"sidecar":{"TaskTemplate": {"Placement": {"Constraints": []}}}}'


# Certificate resolve mail adress for ACME challange:
CERTIFICATE_RESOLVE_MAIL_ADDRESS=mail@example.org
CERTIFICATE_RESOLVE_DNS_CHALLANGE_IP=


# used by director-v2
COMPUTATIONAL_BACKEND_DEFAULT_CLUSTER_URL=tcp://${PREFIX_STACK_NAME}_dask-scheduler:8786
COMPUTATIONAL_BACKEND_DEFAULT_CLUSTER_FILE_LINK_TYPE=PRESIGNED
COMPUTATIONAL_BACKEND_DEFAULT_FILE_LINK_TYPE=PRESIGNED

DATCORE_ADAPTER_HOST=${PREFIX_STACK_NAME}_datcore-adapter

DASK_SCHEDULER_HOST=${PREFIX_STACK_NAME}_dask-scheduler

DEPLOYMENT_AGENT_POLLING_INTERVAL=120

# Director config : This label will be added by the director to the service deployed by the sidecars.
DIRECTOR_SERVICES_CUSTOM_CONSTRAINTS=""
DIRECTOR_V2_DEV_FEATURES_ENABLED=0
DIRECTOR_V2_DEFAULT_CLUSTER_AUTH='{"type":"simple", "username":"gateway_username", "password": "gateway_password"}'
DIRECTOR_V2_SERVICES_CUSTOM_CONSTRAINTS='[]'
DIRECTOR_HOST=${PREFIX_STACK_NAME}_director
DIRECTOR_V2_HOST=${PREFIX_STACK_NAME}_director-v2
DIRECTOR_SELF_SIGNED_SSL_SECRET_ID=

DEPLOYMENT_AGENT_CONFIG=deployment_config.yaml
DEPLOYMENT_AGENT_LOGLEVEL=DEBUG

# We need to add dockerhub credentials to the registry and for the deployer (token created for devops user)
DOCKER_HUB_URL=https://index.docker.io/v1
DOCKER_HUB_LOGIN=
DOCKER_HUB_PASSWORD=

# Dynamic sidecar
DYNAMIC_SIDECAR_LOG_LEVEL=INFO
DYNAMIC_SIDECAR_DOCKER_NODE_RESOURCE_LIMITS_ENABLED=False
DYNAMIC_SIDECAR_DOCKER_NODE_CONCURRENT_SAVES=2
DYNAMIC_SIDECAR_DOCKER_NODE_SAVES_LOCK_TIMEOUT_S=10.0

## Theses services won't be deployed by the agent in the simcore stack
EXCLUDED_SIMCORE_SERVICES="webclient"

FILESTASH_DOMAIN=filestash.${MONITORING_DOMAIN}
FILESTASH_CONFIG_SECRET_KEY='RRReXInnnnnSZLLL'

# For service author information
FUNCTION_SERVICES_AUTHORS='{"UN": {"name": "Unknown", "email": "unknown@example.org", "affiliation": "unknown"}}'

# Z43 Gitlab credentials
GIT_OPS_LOGIN=tester
GIT_OPS_PASSWORD=
GIT_SIMCORE_REPO_BRANCH=master
GIT_SIMCORE_REPO_URL=https://github.com/ITISFoundation/osparc-simcore.git
GIT_OPS_REPO_BRANCH='main'
GIT_OPS_REPO_OWNER=oSparc
GIT_OPS_REPO_NAME=osparc-ops-environments.git
GIT_OPS_REPO_SERVER=git.speag.com
GIT_OPS_REPO_URL=https://${GIT_OPS_REPO_SERVER}/${GIT_OPS_REPO_OWNER}/${GIT_OPS_REPO_NAME}
GIT_DEPLOYEMENTCONFIG_REPO_URL=https://github.com/ITISFoundation/osparc-ops-deployment-configuration.git
GIT_DEPLOYEMENTCONFIG_REPO_BRANCH=osparc.local-wsl2
GIT_DEPLOYEMENTCONFIG_LOGIN=token
GIT_DEPLOYEMENTCONFIG_PASSWORD=

# Grafana auto-generated dahsboards configuration. values = aws or dalco
GRAFANA_CLUSTER=master
GRAFANA_ALERTS_MAIL=mail@example.org

# Graylog
GRAYLOG_LOGIN=${SERVICES_USER}
GRAYLOG_PASSWORD_SECRET=0000000891547522 # must be at least 16 characters
GRAYLOG_ROOT_PASSWORD=${SERVICES_PASSWORD}
GRAYLOG_RETENTION_TIME_DAYS=2
GRAYLOG_SYSLOG_CAPTURE_PORT=12202
GRAYLOG_TRANSPORT_EMAIL_USE_AUTH=TRUE
GRAYLOG_TRANSPORT_EMAIL_USE_TLS=FALSE
GRAYLOG_TRANSPORT_EMAIL_ENABLED=FALSE
GRAYLOG_TRANSPORT_EMAIL_USE_SSL=FALSE
GRAYLOG_SLACK_WEBHOOK_URL=https://example.org/
GRAYLOG_SLACK_WEBHOOK_ICON_URL=http://www.e2s.com/product/13157-b400rth-rotating-beacon-halogen-bulb
GRAYLOG_SLACK_WEBHOOK_CHANNEL=osparc-batman

# If there are multiple domain name used. If not, let it empty. If yes, add only the secondary domains (ex if you have osparc-master.speag.com and tis-master.speag.com, only add tis-master.speag.com here. osparc-master.speag.com has to be set up in the MACHINE_FQDN variable.) Format is MACHINE_FQDNS="tis.speag.com,s4l.speag.com"
MACHINE_FQDNS=""

## Mattermost config into deployer
MATTERMOST_CHANNEL_ID=
MATTERMOST_ENABLED=false
MATTERMOST_HEADER_NAME=
MATTERMOST_PERSONAL_TOKEN=
MATTERMOST_URL=

# Minio - Disabled on master
# optionally activate the host data folder for each partition (must be /data/diskX/minio on each node where X is the disk number if there is more than one disk per node)
MINIO_HOST_DATA_FOLDER=
MINIO_NUM_MINIOS=1
MINIO_NUM_PARTITIONS=1

MONITORED_NETWORK=monitored_network

#DEVOPS Mail Adress
OSPARC_DEVOPS_MAIL_ADRESS=mail@example.org

OPS_MONITORED_NETWORK=${MONITORED_NETWORK}
OPS_PUBLIC_NETWORK=public-network

# Portainer
PORTAINER_DOMAIN=portainer.${MACHINE_FQDN}
PORTAINER_PASSWORD=${SERVICES_PASSWORD}
PORTAINER_USER=admin # It is always admin in portainer

# Postgres
POSTGRES_DB=simcoredb
POSTGRES_ENDPOINT=${PREFIX_STACK_NAME}_postgres:5432
# PGSQL user who access data transited into grafana dashboards - this credentials have to be the same for dalco staging and production
POSTGRES_GRAFANA_USER=grafanareader
POSTGRES_GRAFANA_PASSWORD=${SERVICES_PASSWORD}
POSTGRES_HOST=${PREFIX_STACK_NAME}_postgres
POSTGRES_PASSWORD=${SERVICES_PASSWORD}
POSTGRES_PUBLIC_HOST=${MACHINE_FQDN}
POSTGRES_PORT=5432
POSTGRES_USER=scu
POSTGRES_DOMAIN=postgres.${MACHINE_FQDN}

PROJECTS_MAX_COPY_SIZE_BYTES=100Gib

# Prometheus retention
PROMETHEUS_RETENTION=7d
PROMETHEUS_PORT=9090

# Puppeteer
PUPPETEER_PASSWORD=

PUBLIC_NETWORK=${OPS_PUBLIC_NETWORK}

# Rabbit
RABBIT_HOST=${PREFIX_STACK_NAME}_rabbit
RABBIT_LOG_CHANNEL=comp.backend.channels.log
RABBIT_PASSWORD=${SERVICES_PASSWORD}
RABBIT_PORT=5672
RABBIT_PROGRESS_CHANNEL=comp.backend.channels.progress
RABBIT_CHANNELS='{"log": "simcore.services.logs", "progress": "simcore.services.progress", "instrumentation": "simcore.services.instrumentation", "events": "simcore.services.events"}'
RABBIT_USER=${SERVICES_USER}

# R_CLONE
R_CLONE_ENABLED=FALSE
R_CLONE_PROVIDER=CEPH
R_CLONE_VFS_CACHE_MODE=minimal

# Redis-commander
REDIS_HOST=${PREFIX_STACK_NAME}_redis
REDIS_PORT=6379

# Registry
REGISTRY_AUTH=True
REGISTRY_AWS_REGION=us-east-1 # This is only used if the registry uses AWS S3 buckets instead of locally hosted minio S3 storage
REGISTRY_DOMAIN=registry.${MACHINE_FQDN}
# Docker registry
REGISTRY_PW=${SERVICES_PASSWORD}
REGISTRY_S3_ACCESS_KEY=${S3_ACCESS_KEY}
REGISTRY_S3_BUCKET=${REGISTRY_DOMAIN}
REGISTRY_S3_ENDPOINT=${STORAGE_DOMAIN}
REGISTRY_S3_SECRET_KEY=${S3_SECRET_KEY}
REGISTRY_S3_SECURE="true"
REGISTRY_SSL=True
REGISTRY_USER=${SERVICES_USER}

REST_SWAGGER_API_DOC_ENABLED=True

# DNS Challenge - Domain provider config only for DALCO and master clusters - Z43 in house
RFC2136_NAMESERVER=
RFC2136_POLLING_INTERVAL=
RFC2136_PROPAGATION_TIMEOUT=
RFC2136_TSIG_ALGORITHM=
RFC2136_TSIG_KEY=
RFC2136_TSIG_SECRET=


# Scicrunch
SCICRUNCH_API_KEY=


# Simcore deployment -------------------------------------------------------
SIMCORE_BRANCH=master
SIMCORE_DOCKER_REGISTRY=itisfoundation
# set the image tag the deployment-agent will use to deploy the simcore stack
SIMCORE_IMAGE_TAG=master-github-latest
SIMCORE_INTERACTIVE_NETWORK_SUBNET=172.13.0.0/16
# define the stack prefix name
# 1. stack name = PREFIX_STACK_NAME-SIMCORE_STACK_NAME
# 2. inside stack services are named as in webserver -> PREFIX_STACK_NAME_webserver
SIMCORE_PORT=9081


# Mail server
SMTP_HOST=
SMTP_PASSWORD=
SMTP_PORT=
SMTP_USERNAME=
SMTP_SENDER=
SMTP_PROTOCOL=

# Tags for the simcore repo. Has to respect the following formatting : "tags: ^v[0-9]+.[0-9]+.[0-9]+$" with "". Let empty if no tags
STORAGE_DEFAULT_PRESIGNED_LINK_EXPIRATION_SECONDS='21600'
STORAGE_CLEANER_INTERVAL_S=300
STORAGE_ENDPOINT=${PREFIX_STACK_NAME}_storage:8080
STORAGE_HOST=${PREFIX_STACK_NAME}_storage

SWARM_STACK_NAME=${PREFIX_STACK_NAME}-simcore
SWARM_STACK_NAME_NO_HYPHEN=${PREFIX_STACK_NAME}_simcore

## Tags for the simcore repo. Has to respect the following formatting : "tags: ^v[0-9]+.[0-9]+.[0-9]+$" with "". Let empty if no tags
TAGS_SIMCORE_REPO=

# MPI nodes
TARGET_MPI_NODE_CPU_COUNT=1

# Testing (e2e/p2p)
TESTING_WEB_DOMAIN=testing.${MACHINE_FQDN}
TESTING_API_DOMAIN=testing.${API_DOMAIN}

# Traefik
TRAEFIK_USER=${SERVICES_USER}
TRAEFIK_RATELIMIT_AVG=800
TRAEFIK_RATELIMIT_BURST=400
TRAEFIK_SIMCORE_ZONE=${PREFIX_STACK_NAME}_internal_simcore_stack
OPS_TRAEFIK_REPLICAS=1

TRACING_ENABLED=0
TRACING_THRIFT_COMPACT_ENDPOINT=http://jaeger:5775

# Twilio
TWILIO_ACCOUNT_SID=DUMMY
TWILIO_AUTH_TOKEN=DUMMY
TWILIO_COUNTRY_CODES_W_ALPHANUMERIC_SID_SUPPORT=["41"]


# Webserver service features
API_SERVER_DEV_FEATURES_ENABLED=1
WEBSERVER_DEV_FEATURES_ENABLED=1
WEBSERVER_LOGIN_REGISTRATION_CONFIRMATION_REQUIRED=0
WEBSERVER_HOST=${PREFIX_STACK_NAME}_webserver
WEBSERVER_LOGLEVEL=DEBUG
WEBSERVER_LOGIN_REGISTRATION_INVITATION_REQUIRED=0
WEBSERVER_STUDIES_ACCESS_ENABLED=1
WEBSERVER_LOGIN_2FA_REQUIRED=0
WEBSERVER_EXPORTER=null

# Automatically generated variables (generated by the deploy script. Do not fill manually)

# Hashed traefik password
TRAEFIK_PASSWORD=


# Token used for sessions purpose
WEBSERVER_SESSION_SECRET_KEY=
